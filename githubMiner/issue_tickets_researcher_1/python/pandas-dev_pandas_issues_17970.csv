,target,doc
0,1,DataFrame.apply with axis=1 returning (also erroring) different results when returning a list
1,1,"#### Code Sample, a copy-pastable example if possible"
2,,
3,0,```python
4,0,">>> df = pd.DataFrame(data=np.random.randint(0, 5, (5,3)),"
5,0,"                  columns=['a', 'b', 'c'])"
6,0,>>> df
7,0,   a  b  c
8,0,0  4  0  0
9,0,1  2  0  1
10,0,2  2  2  2
11,0,3  1  2  2
12,0,4  3  0  0
13,0,
14,0,">>> df.apply(lambda x: list(range(2)), axis=1)  # returns a Series"
15,0,"0    [0, 1]"
16,0,"1    [0, 1]"
17,0,"2    [0, 1]"
18,0,"3    [0, 1]"
19,0,"4    [0, 1]"
20,0,dtype: object
21,0,
22,0,">>> df.apply(lambda x: list(range(3)), axis=1) # returns a DataFrame"
23,0,   a  b  c
24,0,0  0  1  2
25,0,1  0  1  2
26,0,2  0  1  2
27,0,3  0  1  2
28,0,4  0  1  2
29,0,
30,0,>>> i = 0
31,0,>>> def f(x):
32,0,        global i
33,0,        if i == 0:
34,0,            i += 1
35,0,            return list(range(3))
36,0,        return list(range(4))
37,0,
38,0,">>> df.apply(f, axis=1) "
39,0,"ValueError: Shape of passed values is (5, 4), indices imply (5, 3)"
40,0,```
41,1,#### Problem description
42,1,There are three possible outcomes. When the length of the returned list is equal to the number of columns then a DataFrame is returned and each column gets the corresponding value in the list.
43,,
44,1,"If the length of the returned list is not equal to the number of columns, then a Series of lists is returned."
45,,
46,1,If the length of the returned list equals the number of columns for the first row but has at least one row where the list has a different number of elements than number of columns a ValueError is raised.
47,,
48,,
49,1,#### Expected Output
50,1,Need consistency. Probably should default to a Series of lists for all examples.
51,,
52,1,#### Output of ``pd.show_versions()``
53,,
54,0,<details>
55,0,
56,0,INSTALLED VERSIONS
57,0,------------------
58,0,commit: None
59,0,python: 3.6.1.final.0
60,0,python-bits: 64
61,0,OS: Darwin
62,0,OS-release: 15.6.0
63,0,machine: x86_64
64,0,processor: i386
65,0,byteorder: little
66,0,LC_ALL: None
67,0,LANG: en_US.UTF-8
68,0,LOCALE: en_US.UTF-8
69,0,
70,0,pandas: 0.21.0rc1
71,0,pytest: 3.0.7
72,0,pip: 9.0.1
73,0,setuptools: 35.0.2
74,0,Cython: 0.25.2
75,0,numpy: 1.13.3
76,0,scipy: 0.19.0
77,0,pyarrow: None
78,0,xarray: None
79,0,IPython: 6.0.0
80,0,sphinx: 1.5.5
81,0,patsy: 0.4.1
82,0,dateutil: 2.6.1
83,0,pytz: 2017.2
84,0,blosc: None
85,0,bottleneck: 1.2.0
86,0,tables: 3.4.2
87,0,numexpr: 2.6.2
88,0,feather: None
89,0,matplotlib: 2.1.0
90,0,openpyxl: 2.4.7
91,0,xlrd: 1.0.0
92,0,xlwt: 1.2.0
93,0,xlsxwriter: 0.9.6
94,0,lxml: 3.7.3
95,0,bs4: 4.6.0
96,0,html5lib: 0.9999999
97,0,sqlalchemy: 1.1.9
98,0,pymysql: None
99,0,psycopg2: None
100,0,jinja2: 2.9.6
101,0,s3fs: None
102,0,fastparquet: None
103,0,pandas_gbq: None
104,0,pandas_datareader: 0.5.0
105,0,
106,0,</details>
