,target,doc
0,1,RedissonCommands.EVAL_MAP_KEY_SET using MapValueDecoder
1,1,**Expected behavior**
2,,
3,1,"When invoking RedissonMapCache.readAllKeySet() the codec's map key decoder should be invoked, i.e  Codec.getMapKeyDecoder()"
4,,
5,1,**Actual behavior**
6,,
7,1,"The codec's map value decoder is being used to decode keys, i.e. Codec.getMapValueDecoder() which causes exceptions to be thrown depending on the codec being used."
8,,
9,1,This is caused by RedisCommands.EVAL_MAP_KEY_SET being defined using MapValueDecoder instead of MapKeyDecoder.  I have locally amended the command to use MapKeyDecoder which fixed the problem
10,,
11,1,**Steps to reproduce or test case**
12,,
13,0,```
14,0,public class User {
15,0,"    @JsonProperty(""username"")"
16,0,    private final String username;
17,,
18,0,    @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
19,0,"    public User(@JsonProperty(""username"") String username) {"
20,0,        this.username = username;
21,0,    }
22,,
23,0,    public String getUsername() {
24,0,        return username;
25,0,    }
26,0,}
27,,
28,0,        final RedissonClient client = ...;
29,0,"        final Codec codec = new TypedJsonJacksonCodec(null, Long.class, User.class);"
30,0,"        final RMapCache<Long, User> redissonMap = client.getMapCache(""test"", codec, MapOptions.defaults());"
31,0,"        System.out.println(redissonMap.put(1L, new User(""test"")));"
32,0,        System.out.println(redissonMap.readAllKeySet());
33,0,```
34,,
35,,
36,1,**Redisson version**
37,0,3.16.5
