,target,doc
0,1,Redisson complains about multiple masters when two replicated address nodes resolve to the same IP
1,1,We are working through issues with using Redisson with AWS Elasticache during upgrade/failover/etc.
2,,
3,1,We currently have a replicated cluster of size 2: 1 master and 1 replicated node.
4,1,AWS Elasticache provides us with two DNS endpoints to use:
5,,
6,0,1. master.`<redacted>`.cache.amazonaws.com:6379
7,0,2. replica.`<redacted>`.cache.amazonaws.com:6379
8,,
9,1,"During normal operation both of these DNS entries will resolves to different IP addresses, however during upgrade/failover it is possible that only one cluster node is available and the DNS entries will resolve to the same IP addresses. "
10,,
11,1,Even when operating the cluster with 1 node I think this should be allowed. This allows infrastructure teams to easily to scale up/down underlying cluster nodes load balanced by DNS without having to modify the application config to include/exclude certain hostnames.
12,,
13,1,**Expected behavior**
14,,
15,1,"Redisson should tolerate when more than one node address resolves to the same IP address, that happens to be a master in the cluster. "
16,,
17,1,**Actual behavior**
18,,
19,0,> org.redisson.connection.ReplicatedConnectionManager.<init>(ReplicatedConnectionManager.java:80)
20,0,> org.redisson.Redisson.<init>(Redisson.java:67)
21,0,> org.redisson.config.ConfigSupport.createConnectionManager(ConfigSupport.java:199)
22,0,> org.redisson.Redisson.create(Redisson.java:108)
23,0,> `<redacted>`.main(Application.kt:97)
24,0,"> Exception in thread ""main"" org.redisson.client.RedisException: Multiple masters detected"
25,,
26,1,**Steps to reproduce or test case**
27,,
28,1,Initialize replicated configuration with two DNS entries that resolve to the same IP address.
29,,
30,1,**Redis version**
31,,
32,0,6+
33,,
34,1,**Redisson version**
35,,
36,0,3.15.2
37,,
38,1,**Redisson configuration**
39,,
40,0,```java
41,0,final Config config = new Config();
42,0,final ReplicatedServersConfig replicatedConfig = config.useReplicatedServers();
43,0,"replicatedConfig.addNodeAddress(""AWS Elasticache primary endopoint"");"
44,0,"replicatedConfig.addNodeAddress(""AWS Elasticache replica endpoint"");"
45,0,```
