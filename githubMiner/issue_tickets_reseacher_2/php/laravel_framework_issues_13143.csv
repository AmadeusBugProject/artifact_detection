,target,doc
0,1,Configuration loader overrides nested values
1,1,Given a scenario where nested configuration files are used such that there are
2,1,"several config files (`#1`), the method `Bootstrap / LoadConfiguration ::"
3,1,getConfigurationFiles` does not return the files in any particular order
4,1,leading to a potential situation where the files array may contain keys as
5,1,listed in `#2`. When the loadConfigurationFiles method iterates over these
6,1,"keys, we end up with several invocations to Config/Repository::set (`#3`)."
7,1,"The issue is that the last invocation will override the ""nested"" values"
8,1,from the previous two.
9,,
10,1,"If this scenario is indeed supported, as I would guess from reading `Bootstrap"
11,1,"/ LoadConfiguration :: getConfigurationNesting`, then a possible solution would"
12,1,be to `ksort` the $files array in `getConfigurationFiles` or-and merge the
13,1,values in loadConfigurationFiles.  Merging the values is not desireable because
14,1,the order of the files is haphazard unless the filesystem makes some guarantees
15,1,there.
16,,
17,1,So to summarize; call ksort($files) in getConfigurationFiles() before
18,0,`return $files`.
19,,
20,1,This was found in Laravel 5.1.
21,1,"## ""nested"" configuration files"
22,,
23,0,```
24,0,(#1)
25,0,config/zumba.php
26,0,config/zumba/classes.php
27,0,config/zumba/instructors.php
28,0,```
29,1,## $files array in getConfigurationFiles()
30,,
31,0,```
32,0,(#2)
33,0,[
34,0,    zumba.classes => /full/path/zumba/classes.php
35,0,    zumba.instructors => /full/path/zumba/classes.php
36,0,    zumba => /full/path/zumba.php
37,0,]
38,0,```
39,1,## problematic invocation of Config\Repository::set
40,,
41,0,```
42,0,(#3)
43,0,"$repository->set('zumba.classes', require ...)"
44,0,"$repository->set('zumba.instructors', require ...)"
45,0,"$repository->set('zumba', require ...)"
46,0,```
