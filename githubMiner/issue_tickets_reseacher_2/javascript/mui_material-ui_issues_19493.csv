,target,doc
0,1,How to use List controls (and other 'fancy' aspects of lists) with a virtualized list?
1,1,The example of a Virtualized List on the documentation shows a simple `ListItem` component: https://material-ui.com/components/lists/
2,,
3,1,This is easy to get working. Trying to add children of `ListItem` results in very badly displayed lists. This is also the case when the primary text of a list item component is too long (shown in the code below):
4,,
5,1,"I'm not sure if this is a bug, a limitation of the `VirtualizedList`, or if I'm just using the library incorrectly. My return function is this:"
6,,
7,0,```
8,0,return results ? (
9,0,"  <div style={{ width: '100%', height: 400, maxWidth: 300 }}>"
10,0,    <FixedSizeList height={400} width={300} itemSize={30} itemCount={results.length}>
11,0,"      {({ index: i, style }) => {"
12,0,        const r = results[i]
13,0,        return (
14,0,          <ListItem key={i} style={style} button>
15,0,            <ListItemText id={r.layerId} primary={r.layerId} />
16,0,          </ListItem>
17,0,        )
18,0,      }}
19,0,    </FixedSizeList>
20,0,  </div>
21,0,) : null
22,0,```
23,,
24,1,"Using a regular `List` component, everything works fine. The parent (into which the List is rendered) is absolute positioned along with a CSS transform applied "
25,,
26,0,![Capture](https://user-images.githubusercontent.com/6336500/73525234-710f8300-4417-11ea-8c0d-bd41e91cf973.PNG)
