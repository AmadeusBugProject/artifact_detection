,target,doc
0,1,feeding my camera intrinsics to o3d.geometry.PointCloud.create_from_depth_image
1,1,The following code doesn't work since I changed it such that it would use my own camera intrinsics:
2,0,
3,0,```
4,0,import open3d as o3d
5,0,import matplotlib.pyplot as plt
6,0,import numpy as np
7,0,import pickle
8,0,import pyrealsense2 as rs
9,0,def set_intrinsics(intrinsics_dict):
10,0,    intrinsics = rs.intrinsics()
11,0,    intrinsics.width = intrinsics_dict['width']
12,0,    intrinsics.height = intrinsics_dict['height']
13,0,    intrinsics.ppx = intrinsics_dict['ppx']
14,0,    intrinsics.ppy = intrinsics_dict['ppy']
15,0,    intrinsics.fx = intrinsics_dict['fx']
16,0,    intrinsics.fy = intrinsics_dict['fy']
17,0,    intrinsics.model = intrinsics_dict['model']
18,0,    intrinsics.coeffs = intrinsics_dict['coeffs']
19,0,    return intrinsics
20,0,
21,0,"camera = pickle.load(open('camera.pkl', 'rb'))"
22,0,
23,0,color_intrinsics = set_intrinsics(camera['color_intrinsics'])
24,0,"print('color intrinsics: ', color_intrinsics)"
25,0,
26,0,raw_depth = o3d.io.read_image('depth_images/000248.png')
27,0,"pcd = o3d.geometry.PointCloud.create_from_depth_image(raw_depth, color_intrinsics)"
28,0,"print(np.asarray(pcd.points)[1,:])"
29,0,o3d.visualization.draw_geometries([pcd])
30,0,```
31,0,
32,1,The error is:
33,0,
34,0,```
35,0,color intrinsics:  [ 1280x720  p[644.629 358.26]  f[925.577 924.895]  Inverse Brown Conrady [0 0 0 0 0] ]
36,0,---------------------------------------------------------------------------
37,0,TypeError                                 Traceback (most recent call last)
38,0,<ipython-input-13-9296723c7a18> in <module>
39,0,      5 
40,0,      6 raw_depth = o3d.io.read_image('depth_images/000248.png')
41,0,"----> 7 pcd = o3d.geometry.PointCloud.create_from_depth_image(raw_depth, color_intrinsics)"
42,0,"      8 print(np.asarray(pcd.points)[1,:])"
43,0,      9 o3d.visualization.draw_geometries([pcd])
44,0,
45,0,TypeError: create_from_depth_image(): incompatible function arguments. The following argument types are supported:
46,0,"    1. (depth: open3d::geometry::Image, intrinsic: open3d.cuda.pybind.camera.PinholeCameraIntrinsic, extrinsic: numpy.ndarray[float64[4, 4]] = array([[1., 0., 0., 0.],"
47,0,"       [0., 1., 0., 0.],"
48,0,"       [0., 0., 1., 0.],"
49,0,"       [0., 0., 0., 1.]]), depth_scale: float = 1000.0, depth_trunc: float = 1000.0, stride: int = 1, project_valid_depth_only: bool = True) -> open3d.cuda.pybind.geometry.PointCloud"
50,0,
51,0,"Invoked with: Image of size 1280x720, with 1 channels."
52,0,"Use numpy.asarray to access buffer data., [ 1280x720  p[644.629 358.26]  f[925.577 924.895]  Inverse Brown Conrady [0 0 0 0 0] ]"
53,0,
54,0,```?
55,0,
56,1,This is despite the fact that this other code works and visualizes a 3d pointcloud. 
57,0,
58,0,
59,0,```
60,0,raw_depth = o3d.io.read_image('depth_images/000248.png')
61,0,"pcd = o3d.geometry.PointCloud.create_from_depth_image(raw_depth,"
62,0,o3d.camera.PinholeCameraIntrinsic(
63,0,                                  o3d.camera.PinholeCameraIntrinsicParameters.PrimeSenseDefault)
64,0,"                                , np.identity(4), depth_scale=1000.0, depth_trunc=1000.0)"
65,0,"pcd.transform([[1, 0, 0, 0], [0, -1, 0, 0], [0, 0, -1, 0], [0, 0, 0, 1]])"
66,0,"print(np.asarray(pcd.points)[1,:])"
67,0,o3d.visualization.draw_geometries([pcd])
68,0,```
69,0,
70,0,
71,1,How can I feed color_intrinsics of my camera to the `o3d.geometry.PointCloud.create_from_depth_image`?
